created: 20210321184508368
draft.of: Super Star Trek in JavaScript
draft.title: Super Star Trek in JavaScript
modified: 20210323041957985
title: Draft of 'Super Star Trek in JavaScript'
type: text/vnd.tiddlywiki

I'd like to blog about this. Maybe I'll take some notes first and then turn the notes into a post?

!! Super Star Trek?

[[Super Star Trek|https://en.wikipedia.org/wiki/Star_Trek_(1971_video_game)#Super_Star_Trek]] is a circa-1978 roguelike space combat game set in the original Star Trek series universe. It's implemented in BASIC and offers an [[ASCII art|https://en.wikipedia.org/wiki/ASCII_art]] interface to a roughly turn-based game loop.

The goal is to explore a galactic grid of randomized space sectors, in order to hunt down and destroy all enemy Klingon ships before the given deadline elapses. Time passes during ship movement, repairs, and firing weapons - so there's pressure to be efficient in exploration and there's a cost to taking damage or using up ship resources.

The ship has limited energy and an array of functional systems like scanners, shields, phasers, torpedoes, warp drive, and a library-computer that offers a handful of utility functions. Any of these systems can be damaged & disabled in combat, which can radically alter game play at any point. Systems also have a chance to fail, improve, or be repaired during travel.

Finally, there are a number of Starbases scattered around the galaxy that can effect repairs and replenish the ship on docking - though these need to be discovered through exploration just like enemy ships.

All-in-all, I think Super Star Trek is an impressively sophisticated game considering the limitations of BASIC and the computers on which it originally ran. It also inspired a few other games - such as Atari's Star Raiders, another personal favorite of mine!

!! My history with Super Star Trek

It was probably around 1982 when I first encountered Super Star Trek as a type-in program listing in [[David Ahl's BASIC Computer Games|https://www.atariarchives.org/basicgames/showpage.php?page=157]].

It was one of the longer listings in the book, so there was plenty of opportunity to mess up while typing it and get familiar with fixing the code. Over the years, I tried tweaking and expanding it. Played with the random numbers to make it easier or harder. Made the galaxy bigger for longer games. Tried implementing saved games. Changed all the references to Star Trek: The Next Generation - Romulans instead of Klingons, Data instead of Sulu, etc. Even tried to make it into an isometric 3D thing, but I never quite made that work.

Also, as a text-based game, Super Star Trek demands a lot of reading, entering of commands, and retaining little scraps of information like directions and distances. At a time when I was making cardboard starfighter cockpits, it made me feel like I was role-playing a starship captain engaged in tactical combat just like in the TV show! 

And I just loved computers as a kid, chased any excuse to get one under my hands. The whole spectacle of having a microcomputer all to myself. I'm not into cars, but I've heard folks talk about loving the sound of an engine, turning the wheel and feeling the steering system respond. Just the basic sense of partnering up with a machine.

That's how it was for me & computers at age 8 - and now, honestly - and I remember Super Star Trek being one of the first things that combined both my beloved science fiction (i.e. Star Trek) and science fact (i.e. the computer).

Super Star Trek felt like a deeper game than any Atari 2600 thing with a joystick or even an arcade cab eating my quarters. Knowing the code behind the game, running through all the interactions of typing commands, letting the game thoroughly live in my head - it was pretty magical for a tiny nerd who loved taking things apart and wanted to go to space.

The closest thing I can think of as a more modern experience might be the game [[Duskers|https://store.steampowered.com/app/254320/Duskers/]] from a few years ago: In that game, you direct drones around derelict space ships using a lo-fi schematic display and a command line interface.

!! Why Super Star Trek now and why JavaScript?

!! Transliteration

!! Clever bits

The game uses the same data for both display and game state in bunch of places.

The galaxy map is a 2-dimensional array of three-digit numbers encoding the number of enemies, starbases, and stars in each sector. These numbers are used directly in long-range scanner readouts, as well as in the code that populates the current sector when the ship arrives. 

The current sector map is a string of 192 characters. The string is treated as a grid of 8 rows with 8 columns. Each cell composed of 3 characters - so 8 x 8 x 3 = 192. Entities in the sector map are ASCII-art representations - e.g. `+K+` for an enemy, `>!<` for a starbase.  

!! Modernization

!! Restraint

!! Next steps
